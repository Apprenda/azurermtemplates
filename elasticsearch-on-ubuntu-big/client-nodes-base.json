{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "Description": "Admin username used when provisioning virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "Description": "Admin password used when provisioning virtual machines"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "uniqueStorageAccountName",
      "metadata": {
        "Description": "Unique namespace for the Storage Account where the Virtual Machine's disks will be placed"
      }
    },
    "region": {
      "type": "string",
      "defaultValue": "West US",
      "metadata": {
        "Description": "Location where resources will be provisioned"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "Description": "VNET resource will be deployed in to"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "Description": "VNET resource will be deployed in to"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A0",
      "metadata": {
        "Description": "Size of the Elasticsearch master nodes"
      }
    },
    "esClusterName": {
      "type": "string",
      "defaultValue": "elasticsearch",
      "metadata": {
        "Description": "The name of the elasticsearch cluster"
      }
    },
    "esVersion": {
      "type": "string",
      "defaultValue": "1.5.0",
      "allowedValues": [
        "1.5.0",
        "1.4.4",
        "1.3.8"
      ],
      "metadata": {
        "Description": "Elasticsearch versino to install"
      }
    },
    "discoveryHosts": {
      "type": "string",
      "metadata": {
        "Description": "Collectino of hosts used for cluster discovery"
      }
    },
    "scriptUrl": {
      "type": "string",
      "metadata": {
        "Description": "Url for the provisioning scritps"
      }
    },
    "dnsName": {
      "type": "string",
      "metadata": {
        "Description": "DNS subdomain"
      }
    }
  },
  "variables": {
    "vmStorageAccountContainerName": "vhd",
    "vmSourceImageName": "b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04_2_LTS-amd64-server-20150309-en-us-30GB",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "sourceImageName": "[concat('/', subscription().subscriptionId,'/services/images/',variables('vmSourceImageName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2014-12-01-preview",
      "location": "[parameters('region')]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "elasticsearchClient",
      "location": "[parameters('region')]",
      "properties": {}
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('clientNodeNic', copyindex())]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "clientNodesNicLoop",
        "count": 3
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('clientVm', copyindex())]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "clientVmLoop",
        "count": 3
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', 'clientNodeNic', copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', 'elasticsearchClient')]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'elasticsearchClient')]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat('esClient', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "sourceImage": {
            "id": "[variables('sourceImageName')]"
          },
          "destinationVhdsContainer": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('clientNodeNic', copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat('clientVm', copyindex(), '/installelasticsearch')]",
      "apiVersion": "2014-12-01-preview",
      "location": "[parameters('region')]",
      "copy": {
        "name": "clientVMExtensionsLoop",
        "count": 3
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', 'clientVm', copyindex())]",
        "[concat('Microsoft.Network/networkInterfaces/', 'clientNodeNic', copyindex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [
            "[parameters('scriptUrl')]"
          ],
          "commandToExecute": "[concat('bash elasticsearch-azure-install.sh -yn ', parameters('esClusterName'), ' -v ', parameters('esVersion'), ' -d ', parameters('discoveryHosts'))]"
        }
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "publicIp",
      "location": "[parameters('region')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsName')]"
        }
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "name": "loadBalancer",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('region')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', 'clientNodeNic0')]",
        "[concat('Microsoft.Network/networkInterfaces/', 'clientNodeNic1')]",
        "[concat('Microsoft.Network/networkInterfaces/', 'clientNodeNic2')]",
        "[concat('Microsoft.Network/publicIPAddresses/', 'publicIp')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LBFE",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses','publicIp')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LBBE",
            "properties": {
              "backendIPConfigurations": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', 'clientNodeNic0'),'/ipConfigurations/ipconfig1')]"
                },
                {
                  "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', 'clientNodeNic1'),'/ipConfigurations/ipconfig1')]"
                },
                {
                  "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', 'clientNodeNic2'),'/ipConfigurations/ipconfig1')]"
                }
              ]
            }
          }
        ],
        "inboundNatRules": [
          {
            "name": "ssh1",
            "properties": {
              "frontendIPConfigurations": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'loadBalancer'),'/frontendIPConfigurations/LBFE')]"
                }
              ],
              "backendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', 'clientNodeNic0'),'/ipConfigurations/ipconfig1')]"
              },
              "protocol": "tcp",
              "frontendPort": 22,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "frontendIPConfigurations": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
                }
              ],
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBE')]"
              },
              "protocol": "tcp",
              "frontendPort": 9200,
              "backendPort": 9200,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5
            }
          }
        ]
      }
    }
  ]
}