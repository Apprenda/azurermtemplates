{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "East US",
      "allowedValues": [
        "West US",
        "East US"
      ],
      "metadata": {
        "Description": "Location where resources will be deployed"
      }
    },
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "Description": "Name of the storage account"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "metadata": {
        "Description": "Type of the storage account"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "Description": "Name of Public IP"
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic"
      ],
      "metadata": {
        "Description": "Type of Public IP"
      }
    },
    "vmStorageAccountContainerName": {
      "type": "string",
      "defaultValue": "vhds",
      "metadata": {
        "Description": "name of Storage Account container for the VHDs"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "Description": "Name of the VM"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "Description": "Size of the VM"
      }
    },
    "vmSourceImageName": {
      "type": "string",
      "defaultValue": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-201412.01-en.us-127GB.vhd",
      "metadata": {
        "Description": "Image to use"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "Description": "Admin Username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "Description": "Admin Password"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "Description": "TName of Virtual Network"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "Description": "VNET address prefix in CIDR format"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "Subnet-1",
      "metadata": {
        "Description": "Subnet 1 Name"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "Subnet-2",
      "metadata": {
        "Description": "Subnet 2 Name"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "Description": "Subnet 1 address prefix in CIDR format"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "Description": "Subnet 2 address prefix in CIDR format"
      }
    },
    "dnsName": {
      "type": "string",
      "metadata": {
        "Description": "DNS Name for Public IP"
      }
    },
    "nicName": {
      "type": "string",
      "metadata": {
        "Description": "Network Interface name"
      }
    },
    "vmExtensionName": {
      "type": "string",
      "metadata": {
        "Description": "Subnet 1 address prefix in CIDR format"
      }
    },
    "client_rb": {
      "type": "string",
      "metadata": {
        "Description": "JSON escaped string value of the client.rb file to pass"
      }
    },
    "runlist": {
      "type": "string",
      "metadata": {
        "Description": "Chef runlist to be used on the VM"
      }
    },
    "validation_key": {
      "type": "string",
      "metadata": {
        "Description": "Chef validation key"
      }
    }
  },
  "variables": {
    "sourceImageName": "[concat('/',subscription().subscriptionId,'/services/images/',parameters('vmSourceImageName'))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]"
  },
  "resources": [{
    "type": "Microsoft.Storage/storageAccounts",
    "name": "[parameters('newStorageAccountName')]",
    "apiVersion": "2014-12-01-preview",
    "location": "[parameters('location')]",
    "properties": {
      "accountType": "[parameters('storageAccountType')]"
    }
  }, {
    "apiVersion": "2014-12-01-preview",
    "type": "Microsoft.Network/publicIPAddresses",
    "name": "[parameters('publicIPAddressName')]",
    "location": "[parameters('location')]",
    "properties": {
      "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
      "dnsSettings": {
        "domainNameLabel": "[parameters('dnsName')]"
      }
    }
  }, {
    "apiVersion": "2014-12-01-preview",
    "type": "Microsoft.Network/virtualNetworks",
    "name": "[parameters('virtualNetworkName')]",
    "location": "[parameters('location')]",
    "properties": {
      "addressSpace": {
        "addressPrefixes": [
          "[parameters('addressPrefix')]"
        ]
      },
      "subnets": [{
        "name": "[parameters('subnet1Name')]",
        "properties": {
          "addressPrefix": "[parameters('subnet1Prefix')]"
        }
      }, {
        "name": "[parameters('subnet2Name')]",
        "properties": {
          "addressPrefix": "[parameters('subnet2Prefix')]"
        }
      }]
    }
  }, {
    "apiVersion": "2014-12-01-preview",
    "type": "Microsoft.Network/networkInterfaces",
    "name": "[parameters('nicName')]",
    "location": "[parameters('location')]",
    "dependsOn": [
      "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]",
      "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
    ],
    "properties": {
      "ipConfigurations": [{
        "name": "ipconfig1",
        "properties": {
          "privateIPAllocationMethod": "Dynamic",
          "publicIPAddress": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
          },
          "subnet": {
            "id": "[variables('subnet1Ref')]"
          }
        }
      }]
    }
  }, {
    "apiVersion": "2014-12-01-preview",
    "type": "Microsoft.Compute/virtualMachines",
    "name": "[parameters('vmName')]",
    "location": "[parameters('location')]",
    "dependsOn": [
      "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
      "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
    ],
    "properties": {
      "hardwareProfile": {
        "vmSize": "[parameters('vmSize')]"
      },
      "osProfile": {
        "computername": "[parameters('vmName')]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]"
      },
      "storageProfile": {
        "sourceImage": {
          "id": "[variables('sourceImageName')]"
        },
        "destinationVhdsContainer": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/')]"
      },
      "networkProfile": {
        "networkInterfaces": [{
          "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('nicName'))]"
        }]
      }
    }
  }, {
    "type": "Microsoft.Compute/virtualMachines/extensions",
    "name": "[concat(parameters('vmName'),'/', parameters('vmExtensionName'))]",
    "apiVersion": "2014-12-01-preview",
    "location": "[parameters('location')]",
    "dependsOn": [
      "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
    ],
    "properties": {
      "publisher": "Chef.Bootstrap.WindowsAzure",
      "type": "ChefClient",
      "typeHandlerVersion": "1201.12",
      "settings": {
        "client_rb": "[parameters('client_rb')]",
        "runlist": "[parameters('runlist')]"
      },
      "protectedSettings": {
        "validation_key": "[parameters('validation_key')]"
      }
    }
  }]
}
